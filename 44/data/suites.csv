"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"
        kill_container:
        Prioritizes killing the test container over the regular container.
        ","3","test_kill_container_priority","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestKillContainer","test_miner_container","",""
"
        set_docker_base_size:
        Verifies that the function writes the correct JSON content to /etc/docker/daemon.json
        and calls subprocess.run to restart Docker.
        ","4","test_set_docker_base_size","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestSetDockerBaseSize","test_miner_container","",""
"Ensures allocated hotkeys don't modify the score multiplier.","1","test_calc_score_pog_with_allocation","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestCalcScorePog","test_calc_score_pog","",""
"Tests if the function correctly handles cases where GPU scores are missing.","1","test_calc_score_pog_empty_config","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestCalcScorePog","test_calc_score_pog","",""
"
        kill_container:
        Kills a running regular container.
        ","2","test_kill_container_regular_running","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestKillContainer","test_miner_container","",""
"Verifies that registered miners receive an additional bonus in their score.","1","test_score_with_registration_bonus","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestScoreFunction","test_score","",""
"
    Test decryption security with mismatched keys.
    
    Verifies that:
    - Attempting to decrypt a message with the wrong private key raises an exception
    - The encryption system properly enforces key pair matching
    ","275","test_decrypt_with_wrong_key","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","","test_rsa_encryption","",""
"
        kill_container:
        Removes a test container that is not running.
        ","2","test_kill_container_test_not_running","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestKillContainer","test_miner_container","",""
"
        check_container:
        Returns True when a regular container (with name ""container"") is running.
        ","1","test_check_container_running","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestCheckContainer","test_miner_container","",""
"Ensures the function returns a score of 0 for an unrecognized GPU.","1","test_calc_score_pog_invalid_gpu","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestCalcScorePog","test_calc_score_pog","",""
"Tests if the score function respects the maximum defined limits.","221","test_score_maximum_values","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestScoreFunction","test_score","",""
"Ensures that the function handles unexpected exceptions gracefully.","5","test_calc_score_pog_exception","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestCalcScorePog","test_calc_score_pog","",""
"get_gpu_info: Should return zero GPUs if no CUDA is available","1","test_get_gpu_info_no_gpu","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestGPUInfo","test_miner_script_m_merkletree","",""
"
        check_container:
        Returns False when an exception is raised during Docker access.
        ","0","test_check_container_exception","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestCheckContainer","test_miner_container","",""
"
        unpause_container:
        Returns False when the provided allocation key does not match.
        ","0","test_unpause_container_key_mismatch","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestUnpauseContainer","test_miner_container","",""
"
    Test RSA key pair generation.
    
    Verifies that:
    - Both private and public keys are generated successfully
    - Keys are returned as strings
    - Keys have the correct PEM format headers
    ","130","test_generate_key_pair","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","","test_rsa_encryption","",""
"
        pause_container:
        Returns False if no allocation key is retrieved.
        ","1","test_pause_container_no_allocation_key","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestPauseContainer","test_miner_container","",""
"
        unpause_container:
        Unpauses the container when the allocation key is valid.
        ","1","test_unpause_container_success","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestUnpauseContainer","test_miner_container","",""
"
        check_container:
        Returns False when the container name does not match the expected value.
        ","1","test_check_container_not_running","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestCheckContainer","test_miner_container","",""
"
    Test the complete encryption and decryption cycle.
    
    Verifies that:
    - A message can be encrypted using the public key
    - The encrypted data is in bytes format
    - The original message can be recovered through decryption
    - The decrypted message matches the original input
    ","64","test_encrypt_decrypt","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","","test_rsa_encryption","",""
"
        pause_container:
        Returns False when no container with the expected name is found.
        ","1","test_pause_container_not_found","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestPauseContainer","test_miner_container","",""
"Tests if the max GPU count of 8 is enforced correctly in the scoring function.","0","test_calc_score_pog_max_gpus","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestCalcScorePog","test_calc_score_pog","",""
"
        kill_container:
        Removes a regular container that is not running.
        ","1","test_kill_container_regular_not_running","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestKillContainer","test_miner_container","",""
"Ensures that score is correctly calculated for a valid hardware configuration.","1","test_score_valid_hardware","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestScoreFunction","test_score","",""
"
        unpause_container:
        Returns False when an exception occurs in get_docker.
        ","0","test_unpause_container_exception","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestUnpauseContainer","test_miner_container","",""
"
        check_container:
        Returns True when a test container (with name ""test_container"") is running.
        ","1","test_check_container_test_running","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestCheckContainer","test_miner_container","",""
"run_compute: Should handle no GPU case without executing further.","4","test_run_compute","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestComputePipeline","test_miner_script_m_merkletree","",""
"
        pause_container:
        Pauses the container when the allocation key is valid.
        ","2","test_pause_container_success","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestPauseContainer","test_miner_container","",""
"
        unpause_container:
        Returns False when no container with the expected name is found.
        ","1","test_unpause_container_not_found","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestUnpauseContainer","test_miner_container","",""
"
        kill_container:
        Kills a running test container.
        ","2","test_kill_container_test_running","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestKillContainer","test_miner_container","",""
"
        get_docker:
        Raises an exception if Docker client initialization fails.
        ","1","test_get_docker_exception","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestGetDocker","test_miner_container","",""
"
        unpause_container:
        Returns False if no allocation key is retrieved.
        ","0","test_unpause_container_no_allocation_key","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestUnpauseContainer","test_miner_container","",""
"Ensures that the function handles WandB API errors without crashing.","4","test_score_exception_handling","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestScoreFunction","test_score","",""
"get_gpu_info: Should correctly list available GPUs and print formatted JSON","1","test_get_gpu_info","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestGPUInfo","test_miner_script_m_merkletree","",""
"estimate_vram_size: Should return usable VRAM estimate for FP16","1","test_estimate_vram_size_fp16","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestVRAMEstimation","test_miner_script_m_merkletree","",""
"
        kill_container:
        Returns False when get_docker raises an exception.
        ","1","test_kill_container_exception","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestKillContainer","test_miner_container","",""
"
        run_container:
        Should successfully run a new container when all dependencies are met and
        container.status is 'created'. Returns a dict with status True and the encrypted info.
        ","7","test_run_container_success","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestRunContainer","test_miner_container","",""
"Ensures that the score calculation does not break if CPU data is missing.","1","test_score_missing_cpu","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestScoreFunction","test_score","",""
"
        kill_container:
        Does nothing if no matching container is found.
        ","3","test_kill_container_not_found","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestKillContainer","test_miner_container","",""
"estimate_vram_size: Should return usable VRAM estimate for FP32","1","test_estimate_vram_size_fp32","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestVRAMEstimation","test_miner_script_m_merkletree","",""
"Ensures correct scoring for a valid GPU with known performance metrics.","1","test_calc_score_pog_valid_gpu","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestCalcScorePog","test_calc_score_pog","",""
"
        get_docker:
        Raises an exception if listing containers fails.
        ","1","test_get_docker_list_exception","tests","Sat Mar 15 04:40:00 GMT 2025","passed","Sat Mar 15 04:40:00 GMT 2025","TestGetDocker","test_miner_container","",""
"
        get_docker:
        Initializes the Docker client and lists containers successfully.
        ","2","test_get_docker_success","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestGetDocker","test_miner_container","",""
"
        pause_container:
        Returns False when the provided allocation key does not match.
        ","0","test_pause_container_key_mismatch","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestPauseContainer","test_miner_container","",""
"
        pause_container:
        Returns False when an exception occurs in get_docker.
        ","1","test_pause_container_exception","tests","Sat Mar 15 04:39:59 GMT 2025","passed","Sat Mar 15 04:39:59 GMT 2025","TestPauseContainer","test_miner_container","",""
